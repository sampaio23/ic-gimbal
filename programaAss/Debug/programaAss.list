
programaAss.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .vetor        00000008  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .eh_frame     00000004  08000008  08000008  00010008  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         000000a0  0800000c  0800000c  0001000c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .data         00000004  080000ac  080000ac  000100ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .init_array   00000004  080000b0  080000b0  000100b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  080000b4  080000b4  000100b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init         0000000c  080000b8  080000b8  000100b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .fini         0000000c  080000c4  080000c4  000100c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .bss          0000001c  080000d0  080000d0  000100d0  2**2
                  ALLOC
  9 .ARM.attributes 00000030  00000000  00000000  000100d0  2**0
                  CONTENTS, READONLY
 10 .debug_line   0000005c  00000000  00000000  00010100  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_info   00000086  00000000  00000000  0001015c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev 00000014  00000000  00000000  000101e2  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_aranges 00000020  00000000  00000000  000101f8  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

0800000c <__do_global_dtors_aux>:
 800000c:	b510      	push	{r4, lr}
 800000e:	4c05      	ldr	r4, [pc, #20]	; (8000024 <__do_global_dtors_aux+0x18>)
 8000010:	7823      	ldrb	r3, [r4, #0]
 8000012:	b933      	cbnz	r3, 8000022 <__do_global_dtors_aux+0x16>
 8000014:	4b04      	ldr	r3, [pc, #16]	; (8000028 <__do_global_dtors_aux+0x1c>)
 8000016:	b113      	cbz	r3, 800001e <__do_global_dtors_aux+0x12>
 8000018:	4804      	ldr	r0, [pc, #16]	; (800002c <__do_global_dtors_aux+0x20>)
 800001a:	f3af 8000 	nop.w
 800001e:	2301      	movs	r3, #1
 8000020:	7023      	strb	r3, [r4, #0]
 8000022:	bd10      	pop	{r4, pc}
 8000024:	080000d0 	.word	0x080000d0
 8000028:	00000000 	.word	0x00000000
 800002c:	08000008 	.word	0x08000008

08000030 <frame_dummy>:
 8000030:	b508      	push	{r3, lr}
 8000032:	4b03      	ldr	r3, [pc, #12]	; (8000040 <frame_dummy+0x10>)
 8000034:	b11b      	cbz	r3, 800003e <frame_dummy+0xe>
 8000036:	4903      	ldr	r1, [pc, #12]	; (8000044 <frame_dummy+0x14>)
 8000038:	4803      	ldr	r0, [pc, #12]	; (8000048 <frame_dummy+0x18>)
 800003a:	f3af 8000 	nop.w
 800003e:	bd08      	pop	{r3, pc}
 8000040:	00000000 	.word	0x00000000
 8000044:	080000d4 	.word	0x080000d4
 8000048:	08000008 	.word	0x08000008

0800004c <inicio>:
	.type inicio, %function

inicio:
	//habilitar PORTD

	ldr r6, = 0x40023800 + 0x30
 800004c:	4e10      	ldr	r6, [pc, #64]	; (8000090 <delay2+0x6>)
	mov r0, 0x08
 800004e:	f04f 0008 	mov.w	r0, #8
	str r0, [r6]
 8000052:	6030      	str	r0, [r6, #0]

	//modo output
	ldr r6, = 0x40020c00 + 0x00
 8000054:	4e0f      	ldr	r6, [pc, #60]	; (8000094 <delay2+0xa>)
	ldr r0, = 0x01000000
 8000056:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
	str r0, [r6]
 800005a:	6030      	str	r0, [r6, #0]

	//output push-pull
	ldr r6, = 0x40020c00 + 0x04
 800005c:	4e0e      	ldr	r6, [pc, #56]	; (8000098 <delay2+0xe>)
	ldr r0, = 0x01000000
 800005e:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
	str r0, [r6]
 8000062:	6030      	str	r0, [r6, #0]

	//speed low
	ldr r6, = 0x40020c00 + 0x08
 8000064:	4e0d      	ldr	r6, [pc, #52]	; (800009c <delay2+0x12>)
	ldr r0, = 0x01000000
 8000066:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
	str r0, [r6]
 800006a:	6030      	str	r0, [r6, #0]

	//no pull-up, pull-down
	ldr r6, = 0x40020c00 + 0x0c
 800006c:	4e0c      	ldr	r6, [pc, #48]	; (80000a0 <delay2+0x16>)
	ldr r0, = 0x01000000
 800006e:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
	str r0, [r6]
 8000072:	6030      	str	r0, [r6, #0]

	mov r2, 0x1000 //ligar led
 8000074:	f44f 5280 	mov.w	r2, #4096	; 0x1000
	mov r3, 0x0000 //desligar led
 8000078:	f04f 0300 	mov.w	r3, #0

	ldr r6, = 0x40020c00 + 0x14 //GPIOD_ODR
 800007c:	4e09      	ldr	r6, [pc, #36]	; (80000a4 <delay2+0x1a>)

0800007e <loop>:

loop:
	str r2, [r6] //liga led
 800007e:	6032      	str	r2, [r6, #0]
	ldr r1, =800000
 8000080:	4909      	ldr	r1, [pc, #36]	; (80000a8 <delay2+0x1e>)

08000082 <delay1>:
delay1:
	subs r1, 1
 8000082:	3901      	subs	r1, #1
	bne delay1
 8000084:	d1fd      	bne.n	8000082 <delay1>

	str r3, [r6] //desliga led
 8000086:	6033      	str	r3, [r6, #0]
	ldr r1, =800000
 8000088:	4907      	ldr	r1, [pc, #28]	; (80000a8 <delay2+0x1e>)

0800008a <delay2>:
delay2:
	subs r1,1
 800008a:	3901      	subs	r1, #1
	bne delay2
 800008c:	d1fd      	bne.n	800008a <delay2>

	b loop
 800008e:	e7f6      	b.n	800007e <loop>
	ldr r6, = 0x40023800 + 0x30
 8000090:	40023830 	.word	0x40023830
	ldr r6, = 0x40020c00 + 0x00
 8000094:	40020c00 	.word	0x40020c00
	ldr r6, = 0x40020c00 + 0x04
 8000098:	40020c04 	.word	0x40020c04
	ldr r6, = 0x40020c00 + 0x08
 800009c:	40020c08 	.word	0x40020c08
	ldr r6, = 0x40020c00 + 0x0c
 80000a0:	40020c0c 	.word	0x40020c0c
	ldr r6, = 0x40020c00 + 0x14 //GPIOD_ODR
 80000a4:	40020c14 	.word	0x40020c14
	ldr r1, =800000
 80000a8:	000c3500 	.word	0x000c3500

Disassembly of section .init:

080000b8 <_init>:
 80000b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80000ba:	bf00      	nop
 80000bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80000be:	bc08      	pop	{r3}
 80000c0:	469e      	mov	lr, r3
 80000c2:	4770      	bx	lr

Disassembly of section .fini:

080000c4 <_fini>:
 80000c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80000c6:	bf00      	nop
 80000c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80000ca:	bc08      	pop	{r3}
 80000cc:	469e      	mov	lr, r3
 80000ce:	4770      	bx	lr
